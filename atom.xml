<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[liggat.org]]></title>
  <link href="http://liggat.org/atom.xml" rel="self"/>
  <link href="http://liggat.org/"/>
  <updated>2013-08-13T23:43:50-04:00</updated>
  <id>http://liggat.org/</id>
  <author>
    <name><![CDATA[Dave Liggat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Paperless, Finally]]></title>
    <link href="http://liggat.org/2013/07/21/paperless/"/>
    <updated>2013-07-21T13:33:00-04:00</updated>
    <id>http://liggat.org/2013/07/21/paperless</id>
    <content type="html"><![CDATA[<p>I&rsquo;m sick to death of accumulating useless paper detritus. I&rsquo;ve fantasized for quite a while about finally finding a &lsquo;paperless&rsquo; workflow that will work well for me now and, <em>crucially</em>, many years (decades) into the future. After reading posts on <a href="http://shawnblanc.net/2012/09/the-paperless-puzzel/">similar</a> <a href="http://speirs.org/blog/2012/6/25/book-scanning.html">initiatives</a>, I think I&rsquo;ve got it. I figured I&rsquo;d document it here, mostly as an exercise in <a href="https://en.wikipedia.org/wiki/Rubber_duck_debugging">rubber-duck debugging</a> of sorts.<!--more--></p>

<h3>Requirements</h3>

<ul>
<li><strong>Recallable</strong>: I should be able to look up a particular document or item purely by knowing a keyword or two, or the rough timeframe in which it was generated. Vast hierarchical organization schemes are only defensible if you&rsquo;re a librarian in the pre-computing age. We can do much better in 2013. The Gmail ethos of &ldquo;search, don&rsquo;t sort&rdquo; works really well for me.</li>
<li><strong>Enduring</strong>: This needs to last for the long haul. There&rsquo;s an expectation I&rsquo;ve set for myself that the core elements of this workflow will persist well beyond a decade, and ideally for the entirety of my [useful] life.</li>
<li><strong>Robust</strong>: Really this applies to all my personal data at this point &ndash; but under <strong>no</strong> circumstances can a paperless archive be allowed to suffer any data loss.</li>
<li><strong>Secure</strong>: Whatever system one has for organizing personal documents, even if that&rsquo;s a physical shoebox full of physical documents, there&rsquo;s a chance that a breach of one&rsquo;s personal data can occur. Acknowledging this, I want my system to make sensible security decisions where possible, and overall, to <em>minimize regret</em>. Trade-offs, as ever, exist &ndash; the shoebox may not be vulnerable to Belarusian hackers, but it <em>is</em> vulnerable to house fires.</li>
</ul>


<h3>Implementation</h3>

<h4>Platform</h4>

<p><a href="http://www.evernote.com">Evernote</a> [Premium] forms the centrepiece of my paperless workflow. I&rsquo;m totally sympathetic to the assertion that it&rsquo;s better to keep long-lived data in highly-portable formats (e.g. PDF files, markdown-formatted UTF-8 text, etc). Using Evernote is somewhat in contravention of this goal, as it stores notes within its own opaque archive format. However, this archive is fully-exportable and navigable, and in the event of Evernote dropping off the face of the earth, there will be no shortage of tools for migrating its notes and notebooks to a new platform. And Evernote has proven itself over the years &ndash; achieving profitability, and garnering ever more paying consumers, businesses, and educational institutions every year &ndash; even going so far as to declare itself a <a href="http://techcrunch.com/2011/11/06/evernote-ceo-phil-libins-top-three-tips-for-building-a-hundred-year-old-company">hundred-year company</a>.</p>

<p>Taken together, objections to Evernote for paperless seem mostly theoretical, rather than actual, to me. Moreover, the benefits in having a syncing, sortable, and <em>highly searchable</em> archive seem worth tolerating that conjectural downside.</p>

<h4>Scanning</h4>

<p><img class="right" src="http://liggat.org/images/send_to_evernote.png" width="275" title="'Send to Evernote'" ></p>

<p>I recently ordered a <a href="http://www.getdoxie.com/product/one/">Doxie One scanner</a>, for $147 CAD or thereabouts. It&rsquo;s simple, and gets the job done. Its OS X app manages to be not terrible for scanning/printing software, which is notable, though admittedly only due to the poverty of the competitive landscape. It quickly processes pages, and saves scans to an included SD card. The app purportedly does <a href="http://en.wikipedia.org/wiki/Optical_character_recognition">OCR</a> (I&rsquo;ll be relying on Evernote for this though), and allows individual PDFs to be &lsquo;stapled&rsquo; into multi-page documents, and then sent on to Evernote.</p>

<h4>Evernote Notes Titles</h4>

<p>Once in Evernote, I assign the note containing the scanned PDF to an appropriate notebook (a yearly one for business expenses, and Archive for everything else). I wrote a small bash function to generate note titles in a consistent format:</p>

<pre><code>$ISO8601_FORMATTED_DATE =&gt; $LOWERCASE_DESCRIPTION (Paperless)
</code></pre>

<p>For example:</p>

<pre><code>2013-07-11 =&gt; apple ipod receipt (Paperless)
</code></pre>

<p>I reasoned that the date (hat tip to <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO8601</a> for its equivalent chronological and lexicographical sorting) is important enough for later retrieval to warrant hard coding in the title metadata<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. You can find the bash snippet for this in <a href="https://gist.github.com/dliggat/5990988">this gist</a>.</p>

<h4>Security</h4>

<p>I view &lsquo;security&rsquo; as the dual-property that my data is available to me, and unavailable to unauthorized parties. To this end, I:</p>

<ul>
<li>Use strong authentication in Evernote: Set a long, unique, random passphrase, and enable 2FA (2-factor authentication)</li>
<li>Turn on full-disk encryption on my computers and mobile devices</li>
<li>Set the mobile app passcode for the Evernote iOS apps</li>
<li>Export my entire archive biweekly, and backup to an external drive and an off-site location<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
<li>Encrypt particularly sensitive stored PDFs with a strong key (stored, obviously, outside of Evernote).</li>
</ul>


<p>With these practices in place, I feel sufficiently confident that access to my account is highly-restricted, and even in the worst case scenario of a full data-breach at Evernote, my most sensitive documents (tax receipts, bank statements, etc) are enciphered.</p>

<p><img class="fancybox center" src="http://liggat.org/images/evernote_pdf_protected.png" title="'Protected PDF'" ></p>

<h3>Fin</h3>

<p>I&rsquo;ll inevitably evolve this over time, but I&rsquo;m feeling pretty good about the setup so far, and its adherence to my goals of <strong>Recallable</strong>, <strong>Enduring</strong>, <strong>Robust</strong>, &amp; <strong>Secure</strong>. So far, I&rsquo;ve been happily adding stuff to my archive, and not yet experienced any inertia or fedup-ness. That&rsquo;s probably a good sign.</p>

<p>There will be a few documents I&rsquo;ll begrudgingly retain in paper form &ndash; governments, perennially stuck in the clipboard and fax-machine era, tend to take a dim view of anything digital, but mostly, I&rsquo;ll be enthusiastically converting documents into Evernote notes, and destroying the originals forever.</p>

<p>Another victory for bits over atoms. Any comments, suggestions, or questions, please <a href="http://liggat.org/about">get in touch</a>.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>The date is for sorting and narrowing, the description terms are for searching, and the (Paperless) suffix identifies a note as originating from this workflow<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>I know this probably seems excessive, but having a catastrophic data loss in the past [many years ago] will do that to a person<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress.new]]></title>
    <link href="http://liggat.org/2013/07/14/octopress-dot-new/"/>
    <updated>2013-07-14T13:43:00-04:00</updated>
    <id>http://liggat.org/2013/07/14/octopress-dot-new</id>
    <content type="html"><![CDATA[<p>Just migrated my [meagre] blog content over from Tumblr to a brand new, shiny Octopress instance.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android as Anti-Platform]]></title>
    <link href="http://liggat.org/2013/05/11/android-as-anti-platform/"/>
    <updated>2013-05-11T09:55:00-04:00</updated>
    <id>http://liggat.org/2013/05/11/android-as-anti-platform</id>
    <content type="html"><![CDATA[<p>It feels awkward to criticize Android as the owner of several physical manifestations of the pride of Cupertino. That ownership seems to irrevocably wash away any possibility of one’s objectivity in the court of Android opinion, despite what ought to count as pretty good “Android credentials&#8221; (I’m a happy alumni of the G1, Nexus One, HTC Desire HD and Nexus 7, and participated in beta-testing/review of the G1 before it was announced as a consumer product). <!--more--> And yet, it’s impossible for me not to voice displeasure at what Samsung is now up to:</p>

<blockquote><p>In an unprecedented move Samsung announced a deal on Thursday to make an established, high profile
Android app incompatible with every Android smartphone except its own. The app in question is ITV
Player, the catch up service for ITV &ndash; the UK’s largest independent terrestrial broadcaster</p></blockquote>

<p>In retrospect, the ideals of Android were hopelessly optimistic: a modern, mobile platform unicorn that would disrupt, humble, and commoditize the carriers, and unite the hardware manufacturers into providing a cornucopia of consumer choice. It should’ve been obvious, at least, that the cellular gatekeepers would not be trounced so easily &ndash; which is why we now live in a world of forked carrier versions of Android, serviceable hardware hobbled by the lack of carrier-controlled OS updates, and needless “value-adding differentiation&#8221; of software on devices. At least much of that could be avoided by sticking with pure-Android Nexus devices, bought straight from Google.</p>

<p>But consider the subversion of Android that this latest chess-move by Samsung represents. They’ve managed to outright exclude Nexus owners from ITV Player in favour of their own devices, using, undoubtedly, the persuasive power of currency. I’m not sure that a precedent for this exists elsewhere in the computing industry’s [rather cutthroat] past. Imagine if Dell successfully convinced Adobe that Photoshop should only be compatible with their particular incarnation of Windows XP machines. Consequently, Android is no longer simply <em>not-a-platform</em> (thanks to the carriers); it has in fact become an <em>anti-platform</em> &ndash; an agent of chaos among existing Android network-effects.</p>

<p>All things considered, it’s just one more disappointment in a long line. But I wish the anti-Apple brigade would spend even 10% of the energy they have for generating vitriol in protest of the destructive actions of the subversive actors in the Android space. This is why, in May 2013, iOS remains the only serious mobile computing <em>platform</em>. I wish it were not thus, but I’m not optimistic this will change any time soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tweet Archive]]></title>
    <link href="http://liggat.org/2013/05/07/tweet-archive/"/>
    <updated>2013-05-07T09:55:00-04:00</updated>
    <id>http://liggat.org/2013/05/07/tweet-archive</id>
    <content type="html"><![CDATA[<p>When Twitter announced in late 2012 that its users could download their tweet archive, it had a begrudging whiff about it. Given the company’s recent heavy-handedness with API access for not only 3rd-party clients but also complementary services such as Flipboard, I was somewhat surprised it even arrived as promised months earlier. <!--more--> I have no insight into the machinations of Twitter Inc. whatsoever, but for some reason I imagine an executive suite very reluctant to relinquish sole ownership of the veritable treasure trove of historical tweets. However, the constant haranguing by their power users, as well as a general environment that frowns upon overtly blatant lock-in (Google Takeout and the Data Liberation Front do a pretty good job setting a decent industry standard here) probably swung the balance.</p>

<p>This leads me to speculate that Twitter didn’t foresee what an incredible enhancement to their product that Tweet Archive actually is. To look back at previous tweets, retweets and favourites is like a time machine for visiting my own personality in the past. It is truly fascinating to see what I was interested in <code>$X $TIME_UNITS</code> ago, and consequently, I’m tweeting, retweeting, and favouriting more now &ndash; just for the pure whimsical pleasure of viewing this data in the future. Twitter has relinquished a measure of control over its service, and has consequently ‘locked-in’, at least me, ever more. This feels like a nice all-around dynamic &ndash; they’ve given me more control over my data, and have managed to bring me closer into the fold as a user as a result.</p>
]]></content>
  </entry>
  
</feed>
